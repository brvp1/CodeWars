/*
This time no story, no theory. The examples below show you how to write function accum:

Examples:
accum("abcd") -> "A-Bb-Ccc-Dddd"
accum("RqaEzty") -> "R-Qq-Aaa-Eeee-Zzzzz-Tttttt-Yyyyyyy"
accum("cwAt") -> "C-Ww-Aaa-Tttt"
The parameter of accum is a string which includes only letters from a..z and A..Z.
*/

/*
P: We are given a string that includes only uppercase and lowercase letters
R: returning a string with letters from the input repeated the number of times
    of it's position, with the first letter capitalized and seperated by a '-'
E: "abcd" -> "A-Bb-Ccc-Dddd"
P: - Convert the string into lowercase letters
   - declare a variable 'result' and initialize it to an empty string 
   - Iterate through the input with index
    - declare a variable 'position' and initialize it (index + 1)
    - declare a variable 'current' and set to
    element repeated 'position' times.
    - append current but make the first letter capitalized
    - append '-' to result
   - return final but remove the final '-' 
*/
function accum(s) {
	const str = s.toLowerCase();
  let result = "";
  for (let i = 0; i < str.length; i++) {
    let position = i + 1;
    let current = str[i].repeat(position);
    result += current[0].toUpperCase() + current.slice(1) + '-';
  }

  return result.slice(0, -1);
}

/*
function accum(s) {
  s.toLowerCase().split('').map((e, i) => {
  let curr = e.repeat(i + 1);
   return curr[0].toUpperCase() + curr.slice(1)
  }).join('-');
}
*/
