/*
Write a function that takes a positive integer n, sums all the cubed values from 1 to n, and returns that sum.

Assume that the input n will always be a positive integer.

Examples: (Input --> output)

2 --> 9 (sum of the cubes of 1 and 2 is 1 + 8)
3 --> 36 (sum of the cubes of 1, 2, and 3 is 1 + 8 + 27)
*/

/*
P: We are getting a positive int
r: the sum of all the cubed values from 1 through that number
e: 2 -> (1 + 8 =) 9
p: Create an empty array
   Iterate from 1 upto the value'n'
   Push the cubed value of each element into the empty array
   Use the reduce method to get the sum of all the values in the array and
   return it
*/

function sumCubes(n){
  let arr = [];
  
  for (let i = 1; i <= n; i++) {
    arr.push(Math.pow(i, 3));
  }
  return arr.reduce((acc, cur) => acc += cur, 0);
}
